/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"github.com/lilic/client-go-instrumented/metrics"
	typedv1 "k8s.io/client-go/kubernetes/typed/apps/v1"
	rest "k8s.io/client-go/rest"
)

type InstrumentedAppsV1Interface interface {
	RESTClient() rest.Interface
	DeploymentsGetter
}

// AppsV1Client is used to interact with features provided by the apps group.
type InstrumentedAppsV1Client struct {
	appsv1        typedv1.AppsV1Interface
	clientMetrics *metrics.ClientMetrics
}

func (c *InstrumentedAppsV1Client) Deployments(namespace string) DeploymentInterface {
	return newDeployments(namespace, c.appsv1.Deployments(namespace), c.clientMetrics)
}

// New creates a new AppsV1Client for the given RESTClient.
func New(c typedv1.AppsV1Interface, clientMetrics *metrics.ClientMetrics) *InstrumentedAppsV1Client {
	return &InstrumentedAppsV1Client{
		appsv1:        c,
		clientMetrics: clientMetrics,
	}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *InstrumentedAppsV1Client) RESTClient() rest.Interface {
	if c == nil {
		return nil
	}
	return c.appsv1.RESTClient()
}
